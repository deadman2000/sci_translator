# kubectl create secret generic nnsecret --from-literal=username=dead_man --from-literal=password='***' --namespace translate
# kubectl create secret generic mongo --from-literal=username='***' --from-literal=password='***' --from-literal=url='mongodb://***:***@mongodb' --namespace translate
# kubectl delete ingressroutes.traefik.containo.us web --namespace translate

# Namespace
apiVersion: v1
kind: Namespace
metadata:
  name: translate
  labels:
    name: translate
---

# Volumes
apiVersion: v1
kind: PersistentVolume
metadata:
  name: translate-volume
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data/translate/"
---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: translate
  name: translate-data
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  volumeName: translate-volume
---

# Web
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: translate
  name: web
spec:
  replicas: 1
  selector:
    matchLabels:
      app: web
  template:
    metadata:
      labels:
        app: web
    spec:
      containers:
      - name: web
        image: docker.dev.ask-glonass.ru/sci_translator:latest
        imagePullPolicy: Always
        env:
        - name: Translate__NotabenoidLogin
          valueFrom:
            secretKeyRef:
              name: nnsecret
              key: username
        - name: Translate__NotabenoidPassword
          valueFrom:
            secretKeyRef:
              name: nnsecret
              key: password
        - name: Mongo__ConnectionString
          valueFrom:
            secretKeyRef:
              name: mongo
              key: url
        ports:
        - name: web
          containerPort: 80
        volumeMounts:
        - mountPath: /app/media/
          name: static
          subPath: static
      volumes:
      - name: static
        persistentVolumeClaim:
          claimName: translate-data
---

apiVersion: v1
kind: Service
metadata:
  namespace: translate
  name: web
spec:
  ports:
    - protocol: TCP
      name: web
      port: 80
  selector:
    app: web
  type: LoadBalancer
---

apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  namespace: translate
  name: web
spec:
  entryPoints:
    - web
    - websecure
  routes:
  - match: Host(`translate.ml.ask-glonass.ru`)
    kind: Rule
    services:
    - name: web
      port: 80
  tls:
    certResolver: default
---

# MongoDB
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: translate
  name: mongodb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
      - name: mongodb
        image: mongo
        ports:
        - name: mongodb
          containerPort: 27017
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              name: mongo
              key: username
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongo
              key: password
        volumeMounts:
        - mountPath: /data/db
          name: db
          subPath: mongodb
      volumes:
      - name: db
        persistentVolumeClaim:
          claimName: translate-data
---

apiVersion: v1
kind: Service
metadata:
  namespace: translate
  name: mongodb
spec:
  selector:
    app: mongodb
  ports:
    - protocol: TCP
      name: mongodb
      port: 27017
---

apiVersion: v1
kind: Service
metadata:
  namespace: translate
  name: mongodb-port
spec:
  ports:
    - protocol: TCP
      name: mongodb
      port: 27018
      targetPort: 27017
  selector:
    app: mongodb
  externalIPs:
    - 95.216.44.142
---

# Video processing
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: translate
  name: video
spec:
  replicas: 2
  selector:
    matchLabels:
      app: video
  template:
    metadata:
      labels:
        app: video
    spec:
      containers:
      - name: video
        image: docker.dev.ask-glonass.ru/video:latest
        env:
        - name: MONGO_USER
          valueFrom:
            secretKeyRef:
              name: mongo
              key: username
        - name: MONGO_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongo
              key: password
        - name: FRAMES_DIR
          value: /data/frames
        - name: DOWNLOAD_DIR
          value: /download
        volumeMounts:
        - mountPath: /data/
          name: translate-volume
          subPath: static
        - mountPath: /download/
          name: translate-volume
          subPath: download
      volumes:
      - name: translate-volume
        persistentVolumeClaim:
          claimName: translate-data
---

# Elastic
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: translate
  name: elastic
spec:
  replicas: 1
  selector:
    matchLabels:
      app: elastic
  template:
    metadata:
      labels:
        app: elastic
    spec:
      containers:
      - name: elastic
        image: docker.elastic.co/elasticsearch/elasticsearch-oss:7.6.2
        ports:
        - containerPort: 9200
        env:
        - name: discovery.type
          value: single-node
---

apiVersion: v1
kind: Service
metadata:
  namespace: translate
  name: elastic
spec:
  ports:
    - port: 9200
  selector:
    app: elastic
  type: LoadBalancer
